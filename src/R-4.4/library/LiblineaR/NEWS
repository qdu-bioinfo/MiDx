Note: In this file, LiblineaR refers to this R package, while LIBLINEAR refers to the original C/C++ library.

2.10.24
	- Updated calls in cpp files to match RS.h headers (Free -> R_Free, Realloc -> R_Realloc, Calloc -> R_Calloc). 
	
2.10.23
	- Security patch: Better format input of Rprintf by providing a string literal in tron.cpp and linear.cpp
	- Update in CITATION and DESCRIPTION to comply with new formatting specifications 

2.10.22
	- Added compatibility with sparse matrices of class gdTMatrix from package Matrix. Tests updated accordingly.
	- Added compatibility with sparse matrices of class matrix.csc and matrix.coo from package SparseM. Tests updated accordingly.
        - Updating CITATION to reflect contributions from all co-autors.
        - Update in C code: Corrected declaration of two C prototypes; Replacement of sprintf by vsnprintf. 
	- Bug fixing: Removed two unwanted calls to browser() in R tests; 
	- Reformatting this NEWS file.

2.10.12
	- Added compatibility with sparse matrices of class gdCMatrix and dgRMatrix from package Matrix. As a consequence, package Matrix has been added to 'Suggests' in DESCRIPTION file. Compatibility with matrix.csr from package SparseM is still supported. The type of matrix (dense or either type of sparse matrix) is detected automatically. Signatures of functions LiblineaR and predict are unchanged.
	- Package now imports methods package (to support use of 'as' function in order to convert from some matrix formats to others).
	- Corrected a few typos in comments

2.10.8 
	- Upgraded to LIBLINEAR version 2.10, including cross-validation procedure to find parameter C.
	- Two extra arguments in the LiblineaR function.
	- Argument bias from LiblineaR function can now be given as a numeric, allowing to tune the value of the additional bias feature. This change is backwards-compatible with the previous use of booleans.

1.94.2
	- Cleaned DESCRIPTION
	- library(SparseM) replaced by 'require' or 'requireNamespace' as appropriate.

1.94.1
	- Upgraded to LIBLINEAR version 1.94, including support vector *regression*
	- argument labels of function LiblineaR was renamed as target. The old naming is still accepted with a warning
	- argument type of function LiblineaR may take extra values (11,12,13)
	- extra argument svr_eps of function LiblineaR for the tolerance of regression loss
	- if class labels are -1 and 1, ensure that positive decision values represent the class 1
	- enriched examples, with cases of regression
	- Fix CITATION file format to satisfy CRAN requirements
	- Cleaning and reformatting of man pages
	- Fixing a bug in class labels ordering 
	
1.80.11
	- Refactored C code in order to facilitate upgrades of LIBLINEAR.
	- Fix memory leak in predictLinear (the buffer x wasn't freed)
	
1.80.10
	- Shortened examples runtime.
	- Uniformized notations in DESCRIPTION file for LiblineaR (this package) and LIBLINEAR (the C/C++ library wrapped by this package). 

1.80.9
	- Replaced all expressions: rand()%(a-b); by GetRNGstate(); (int) (unif_rand()*(a - b))%(a - b);PutRNGstate(); in linear.cpp, where a and b might take different values.

1.80.8
	- Corrected a bug in memory allocation for sparse matrices: src/trainLinear.c. These changes are to be credited to Christian Wolf.
	- Added a PACKAGE argument to speed up call to .C(...)

1.80.7
	- Modification of various files in order to support sparse matrices. These changes are mainly to be credited to Kai-Hsiang Hsu, from the Department of Computer Science of the National Taiwan University.
	- Addition of examples to reflect the use of sparse matrices in LiblineaR.Rd

1.80.6
	- Corrected a memory mapping bug in predictLinear.c

1.80.5
	- Suppress printing to stdout in linear.cpp, tron.cpp
	- Suppress the use of exit(1); in predictLinear.c
	- Correct a bug when retrieving weights from C to R for multi-class models
 
1.80.4
	- Correct bugs in linear.cpp (update of solve_l1r_l2_svc and solve_l1r_lr)

1.80.3
	- Cleaning of C code

1.80.2
	- Incorporate changes from LIBLINEAR versions 1.51 to 1.80
	- Use set_print_string_function to set the print function
	- Add free_model_content and free_and_destroy_model functions (avoid memory problem if users declare a model variable)
	- Add check_probability_model (consistent with libsvm)
	- A new solver: coordinate descent for dual logistic regression
	- New optimization method for l1-regularized logistic regression
	- linear.cpp: Use 1-norm stopping condition for l1-regularized solvers; newton_iter < l/10 replaced by newton_iter <= l/10 in l2r_lr_dual (for l < 10).
	- predict.LiblineaR function can return additional information: probabilities (only for logistic regression models) or decision values

